{
  "name": "Neo4jSinkConnector",
  "config": {
    "topics": 
        "postgrest.mirea.institutions, postgrest.mirea.student, postgrest.mirea.gruppa, postgrest.mirea.cafedra, postgrest.mirea.course, postgrest.mirea.speciality, postgrest.mirea.lesson",
    "connector.class": "streams.kafka.connect.sink.Neo4jSinkConnector",
    "key.converter": "org.apache.kafka.connect.storage.StringConverter",
    "key.converter.schemas.enable": false,
    "value.converter": "org.apache.kafka.connect.storage.StringConverter",
    "value.converter.schemas.enable": false,
    "errors.retry.timeout": "-1",
    "errors.retry.delay.max.ms": "1000",
    "errors.tolerance": "all",
    "errors.log.enable": true,
    "errors.log.include.messages": true,
    "neo4j.server.uri": "bolt://neo4j:7687",
    "neo4j.authentication.basic.username": "neo4j",
    "neo4j.authentication.basic.password": "connect",
    "neo4j.topic.cypher.postgrest.mirea.institutions": "call apoc.do.case([event.op = 'd', 'match (i:Institute{id : b_i_id}) detach delete i', event.op = 'c', 'create (i:Institute{id: a_i_id, title: a_i_title})', event.op = 'u', 'match(i:Institute {id:a_i_id}) set i.title = a_i_title'], '', {b_i_id:event.before.id, a_i_id:event.after.id, a_i_title:event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.student": "call apoc.do.case([event.op = 'd', 'match(s:Student{code : b_s_code}) detach delete s', event.op = 'u', 'MATCH(s:Student{code:b_s_code})-[m:member_of]->(g1:Group{code:b_g_code}),(g2:Group{code:a_g_code}) delete (m) create (s)-[:member_of]->(g2)', event.op = 'c', 'match(g:Group{code: a_g_code}) create (s:Student{code: a_s_code})-[:member_of]->(g)'], '',{b_g_code:event.before.gruppa_code, b_s_code:event.before.code, a_s_code:event.after.code, a_g_code:event.after.gruppa_code}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.gruppa": "call apoc.do.case([event.op = 'd', 'match (g:Group{code : b_g_code}) detach delete g', event.op = 'c', 'match(s:Speciality{code: a_s_code}) create (g:Group{code: a_g_code})-[:member_of]->(s)', event.op = 'u', 'MATCH(g:Gruppa{code:b_g_code})-[m:member_of]->(s1:Speciality{code:b_s_code}),(s2:Speciality{code:a_s_code}) delete (m) create (g)-[:member_of]->(s2)'], '', {b_g_code:event.before.code, b_s_code:event.before.speciality_code, a_s_code:event.after.speciality_code, a_g_code:event.after.code}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.cafedra": "call apoc.do.case([event.op = 'd', 'match (c:Cafedra{code : b_c_code}) detach delete c', event.op = 'c', 'MATCH(i:Institute{id: a_i_id}) CREATE (c:Cafedra{code: a_c_code, title: a_c_title})-[:member_of]->(i)', event.op = 'u', 'MATCH(ca:Cafedra{code:b_c_code})-[m:member_of]->(i1:Institutions{id:b_i_id}),(i2:Institutions{id:a_i_id}) delete (m) create (ca)-[:member_of]->(i2)'], '', {b_i_id:event.before.institution_id, a_i_id: event.after.institution_id, b_c_code:event.before.code, a_c_code:event.after.code, a_c_title:event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.course": "call apoc.do.case([event.op = 'd', 'match (c:Course{id : b_c_id}) detach delete c', event.op = 'c', 'MATCH(s:Speciality{code:a_s_code}) CREATE (c:Course{id: a_c_id, title: a_c_title})-[:member_of]->(s)', event.op = 'u', 'MATCH(co:Course{id:b_c_id})-[m:member_of]->(s1:Speciality{code:b_s_code}),(s2:Speciality{code:a_s_code}) delete (m) create (co)-[:member_of]->(s2)'], '', {a_c_id: event.after.id, b_c_id:event.before.id, b_s_code:event.before.spec_code, a_s_code:event.after.spec_code, a_c_title:event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.speciality":"call apoc.do.case([event.op = 'd', 'match (s:Speciality{code : b_s_code}) detach delete s', event.op = 'u', 'MATCH(s:Speciality{code:b_s_code})-[m:member_of]->(c1:Cafedra{code:b_ca_code}),(c2:Cafedra{code:a_ca_code}) delete (m) create (s)-[:member_of]->(c2)', event.op = 'c', 'match(c:Cafedra{code:a_ca_code}) create (s:Speciality{code: a_s_code, title: a_s_title})-[:member_of]->(c)'], '', {b_s_code:event.before.code, b_ca_code:event.before.cafedra_code, a_ca_code:event.after.cafedra_code, a_s_code:event.after.code, a_s_title: event.after.title}) yield value as v return v",
    "neo4j.topic.cypher.postgrest.mirea.lesson": "call apoc.do.case([event.op = 'd', 'match (l:Lesson{id : b_l_id}) detach delete l', event.op='u', 'MATCH(l:Lesson{id:b_l_id})-[m:member_of]->(co1:Course{id:b_c_id}),(co2:Course{id:a_c_id}) delete (m) create (l)-[:member_of]->(co2)', event.op = 'c', 'match(c:Course{id: a_c_id}) create (l:Lesson{id: a_l_id, title:a_l_title})-[:member_of]->(c)'], '', {b_l_id:event.before.id, a_l_id:event.after.id, a_l_title:event.after.title, b_c_id:event.before.course_id, a_c_id:event.after.course_id}) yield value as v return v"
  }
}
